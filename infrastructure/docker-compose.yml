services:
  mysql:
    build: .
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=myapp
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppassword
    ports:
      - "3307:3307"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../mysql-logs:/var/log/mysql
    restart: unless-stopped
    networks:
      - database-network

  postgres:
    image: postgres:15
    container_name: postgres-container
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppassword
      - POSTGRES_ROOT_PASSWORD=rootpassword
      - PGUSER=appuser
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../postgres-logs:/var/log/postgresql
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    restart: unless-stopped
    networks:
      - database-network

  dbt:
    build:
      context: .
      dockerfile: Dockerfile.dbt
    container_name: dbt-container
    volumes:
      - ../dbt_project:/dbt/project
      - ../dbt_project/profiles.yml:/dbt/profiles/profiles.yml
      - dbt_target:/dbt/project/target
    working_dir: /dbt/project
    environment:
      - DBT_PROFILES_DIR=/dbt/profiles
    networks:
      - database-network
    depends_on:
      - postgres
    command: tail -f /dev/null  # Keep container running

volumes:
  mysql_data:
  postgres_data:
  dbt_target:

networks:
  database-network:
    driver: bridge
